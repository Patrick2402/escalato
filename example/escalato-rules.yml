rules:
  - name: "Wildcard in AssumeRole Trust Policy"
    description: "Role has a trusted policy with sts:AssumeRole and wildcard principal"
    severity: CRITICAL
    type: ROLE_TRUST_POLICY
    condition:
      service: "sts"
      action: "AssumeRole"
      principal_wildcard: true

  - name: "Admin Access"
    description: "Role or user has administrator access"
    severity: HIGH
    type: ROLE_PERMISSIONS
    condition:
      service: "iam"
      action: "*"
      exclude_patterns:
        - "ReadOnly"
        - "ViewOnly"

  - name: "Full S3 Access"
    description: "Role or user has full access to S3 buckets"
    severity: LOW
    type: ROLE_PERMISSIONS
    condition:
      service: "s3"
      action: "*"
      exclude_patterns:
        - "ReadOnly"
        - "ViewOnly"
        - "AWSLambdaVPCAccessExecutionRole"
        - "AWSLambdaBasicExecutionRole"
        - "AWSLambdaS3ExecutionRole"

  - name: "Full RDS Access"
    description: "Role or user has full access to RDS"
    severity: MEDIUM
    type: ROLE_PERMISSIONS
    condition:
      service: "rds"
      action: "*"
      exclude_patterns:
        - "ReadOnly"
        - "ViewOnly"
        - "AWSLambdaVPCAccessExecutionRole"
        - "AWSLambdaBasicExecutionRole"
        - "AWSLambdaS3ExecutionRole"

  - name: "Outdated Access Key"
    description: "User has access key older than 90 days"
    severity: MEDIUM
    type: USER_ACCESS_KEY
    condition:
      key_age: 90

  - name: "Inactive Access Key"
    description: "User has inactive access key"
    severity: LOW
    type: USER_ACCESS_KEY
    condition:
      key_status: "Inactive"

  - name: "EC2 Full Access for Users"
    description: "User has full access to EC2 instances"
    severity: MEDIUM
    type: USER_PERMISSIONS
    condition:
      service: "ec2"
      action: "*"
      exclude_patterns:
        - "ReadOnly"
        - "ViewOnly"

  - name: "Admin Policy Attached"
    description: "Role or user has the AdministratorAccess policy attached"
    severity: CRITICAL
    type: ROLE_PERMISSIONS
    condition:
      managed_policy: "AdministratorAccess"
      
  - name: "Cross Account Access"
    description: "Role allows cross-account access"
    severity: HIGH
    type: ROLE_TRUST_POLICY
    condition:
      service: "iam"
      principal_wildcard: false
      

  - name: "Lambda Full Access"
    description: "Role or user has full access to Lambda functions"
    severity: MEDIUM
    type: ROLE_PERMISSIONS
    condition:
      service: "lambda"
      action: "*"
      exclude_patterns:
        - "ReadOnly"
        - "ViewOnly"
        - "AWSLambdaVPCAccessExecutionRole"
        - "AWSLambdaBasicExecutionRole"
        - "AWSLambdaS3ExecutionRole"